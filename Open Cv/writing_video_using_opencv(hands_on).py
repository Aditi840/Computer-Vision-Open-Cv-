# -*- coding: utf-8 -*-
"""Writing_Video_Using_Opencv(Hands  On).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1e4eAFHsTm3nJVebRCfxi6WDLdqV6odAI
"""

# Commented out IPython magic to ensure Python compatibility.
import os
import cv2
import matplotlib.pyplot as plt

from zipfile import ZipFile
from urllib.request import urlretrieve

from IPython.display import YouTubeVideo, display, HTML
from base64 import b64encode

# %matplotlib inline

"""Download Assets"""

def download_and_unzip(url, save_path):
  print(f"Downloading and extracting assets....", end="")

  #Downloading zip file using urllib package
  urlretrieve(url, save_path)

  try:
    #Extracting zip file using the zipfile package
    with ZipFile(save_path) as z:
      #Extract zipfile contents in the same directory.
      z.extractall(os.path.split(save_path)[0])

    print("Done")

  except Exception as e:
    print("\nInvalid file.", e)

URL = r"https://www.dropbox.com/s/p8h7ckeo2dnijtz/opencv_bootcamp_assets_NB6.zip?dl=1"

asset_zip_path = os.path.join(os.getcwd(), "opencv_bootcamp_assets_NB6.zip")

#Download if asset ZIP does not exists
if not os.path.exists(asset_zip_path):
  download_and_unzip(URL, asset_zip_path)

"""Read Video From Source"""

source = 'race_car.mp4'  # source = 0 for webcam

cap = cv2.VideoCapture(source)

if not cap.isOpened():
    print("Error opening video stream or file")

"""Read and display one frame"""

ret, frame = cap.read()

plt.imshow(frame[..., ::-1])

"""Display the video file"""

video = YouTubeVideo("RwxVEjv78LQ", width=700, height=438)
display(video)

"""Write video using opencv"""

#Default resolutions of the frame are obtained
#Convert the resolutions from float to integer
frame_width = int(cap.get(3))
frame_height = int(cap.get(4))

#Define the codec and create a videowriter object.
out_avi = cv2.VideoWriter("race_car_out.avi", cv2.VideoWriter_fourcc("M","J","P","G"), 10, (frame_width, frame_height))
out_mp4 = cv2.VideoWriter("race_car_out.mp4", cv2.VideoWriter_fourcc(*"XVID"), 10, (frame_width, frame_height))

"""Read Frames and write to files"""

#Read until video is completed
while cap.isOpened():
  #Capture frame-by-frame
  ret, frame = cap.read()

  if ret:
    #Write the frame to the output files
    out_avi.write(frame)
    out_mp4.write(frame)

  #Break the loop
  else:
    break

#when everything is done, release VideoCapture and VideoWriter objects
cap.release()
out_avi.release()
out_mp4.release()

"""To display the video on google colab, we will install and use the ffmpeg package, we will change the encoding of the .mp4 file from XVID to H264.

HTML5 can properly render videos with H264 encoding and OpenCV doesn't have that encoding yet.That's why we need to change their encodings such that they can be rendered.
"""

#installing ffmpeg
!apt-get -qq install ffmpeg

"""Currently HTLM5 can only supports rendering of MP4 files, so we'll only change the encoding of the race_car_out.mp4 file."""

# change video encoding of mp4 file from XVID to h264
!ffmpeg -y -i "/content/race_car_out.mp4" -c:v libx264 "race_car_out_x264.mp4"  -hide_banner -loglevel error

"""Render mp4 video"""

mp4 = open("/content/race_car_out_x264.mp4", "rb").read()
data_url = "data:video/mp4;base64," + b64encode(mp4).decode()

HTML(f"""<video width=700 controls><source src="{data_url}" type="video/mp4"></video>""")

"""The video rendered in the above cell should be the same as following."""

video = YouTubeVideo("2Gju7YLfkP0", width = 700, height = 438)
display(video)